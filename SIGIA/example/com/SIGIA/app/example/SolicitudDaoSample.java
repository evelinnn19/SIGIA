/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.SIGIA.app.example;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import com.SIGIA.app.dao.SolicitudDao;
import com.SIGIA.app.dto.Solicitud;
import com.SIGIA.app.exceptions.SolicitudDaoException;
import com.SIGIA.app.factory.SolicitudDaoFactory;

public class SolicitudDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		// findAll();
		// findWhereIdSolicitudEquals(0);
		// findWhereNroTramiteEquals("");
		// findWhereFechaEquals(null);
		// findWhereEstadoEquals("");
		// findWhereAreaEquals("");
		// findWhereSolicitanteEquals("");
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			SolicitudDao _dao = getSolicitudDao();
			Solicitud _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereIdSolicitudEquals'
	 * 
	 * @param idSolicitud
	 */
	public static void findWhereIdSolicitudEquals(int idSolicitud)
	{
		try {
			SolicitudDao _dao = getSolicitudDao();
			Solicitud _result[] = _dao.findWhereIdSolicitudEquals(idSolicitud);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereNroTramiteEquals'
	 * 
	 * @param nroTramite
	 */
	public static void findWhereNroTramiteEquals(String nroTramite)
	{
		try {
			SolicitudDao _dao = getSolicitudDao();
			Solicitud _result[] = _dao.findWhereNroTramiteEquals(nroTramite);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereFechaEquals'
	 * 
	 * @param fecha
	 */
	public static void findWhereFechaEquals(Date fecha)
	{
		try {
			SolicitudDao _dao = getSolicitudDao();
			Solicitud _result[] = _dao.findWhereFechaEquals(fecha);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereEstadoEquals'
	 * 
	 * @param estado
	 */
	public static void findWhereEstadoEquals(String estado)
	{
		try {
			SolicitudDao _dao = getSolicitudDao();
			Solicitud _result[] = _dao.findWhereEstadoEquals(estado);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereAreaEquals'
	 * 
	 * @param area
	 */
	public static void findWhereAreaEquals(String area)
	{
		try {
			SolicitudDao _dao = getSolicitudDao();
			Solicitud _result[] = _dao.findWhereAreaEquals(area);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereSolicitanteEquals'
	 * 
	 * @param solicitante
	 */
	public static void findWhereSolicitanteEquals(String solicitante)
	{
		try {
			SolicitudDao _dao = getSolicitudDao();
			Solicitud _result[] = _dao.findWhereSolicitanteEquals(solicitante);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getSolicitudDao'
	 * 
	 * @return SolicitudDao
	 */
	public static SolicitudDao getSolicitudDao()
	{
		return SolicitudDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(Solicitud dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getIdSolicitud() );
		buf.append( ", " );
		buf.append( dto.getNroTramite() );
		buf.append( ", " );
		buf.append( dto.getFecha() );
		buf.append( ", " );
		buf.append( dto.getEstado() );
		buf.append( ", " );
		buf.append( dto.getArea() );
		buf.append( ", " );
		buf.append( dto.getSolicitante() );
		System.out.println( buf.toString() );
	}

}
