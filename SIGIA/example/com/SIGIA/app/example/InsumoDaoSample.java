/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.SIGIA.app.example;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import com.SIGIA.app.dao.InsumoDao;
import com.SIGIA.app.dto.Insumo;
import com.SIGIA.app.exceptions.InsumoDaoException;
import com.SIGIA.app.factory.InsumoDaoFactory;

public class InsumoDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		// findAll();
		// findWhereIdInsumoEquals(0);
		// findWhereNombreEquals("");
		// findWhereCategoriaEquals("");
		// findWhereStockActualEquals(0);
		// findWhereStockMinimoEquals(0);
		// findWhereCriticoEquals(0);
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			InsumoDao _dao = getInsumoDao();
			Insumo _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereIdInsumoEquals'
	 * 
	 * @param idInsumo
	 */
	public static void findWhereIdInsumoEquals(int idInsumo)
	{
		try {
			InsumoDao _dao = getInsumoDao();
			Insumo _result[] = _dao.findWhereIdInsumoEquals(idInsumo);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereNombreEquals'
	 * 
	 * @param nombre
	 */
	public static void findWhereNombreEquals(String nombre)
	{
		try {
			InsumoDao _dao = getInsumoDao();
			Insumo _result[] = _dao.findWhereNombreEquals(nombre);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCategoriaEquals'
	 * 
	 * @param categoria
	 */
	public static void findWhereCategoriaEquals(String categoria)
	{
		try {
			InsumoDao _dao = getInsumoDao();
			Insumo _result[] = _dao.findWhereCategoriaEquals(categoria);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereStockActualEquals'
	 * 
	 * @param stockActual
	 */
	public static void findWhereStockActualEquals(int stockActual)
	{
		try {
			InsumoDao _dao = getInsumoDao();
			Insumo _result[] = _dao.findWhereStockActualEquals(stockActual);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereStockMinimoEquals'
	 * 
	 * @param stockMinimo
	 */
	public static void findWhereStockMinimoEquals(int stockMinimo)
	{
		try {
			InsumoDao _dao = getInsumoDao();
			Insumo _result[] = _dao.findWhereStockMinimoEquals(stockMinimo);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCriticoEquals'
	 * 
	 * @param critico
	 */
	public static void findWhereCriticoEquals(short critico)
	{
		try {
			InsumoDao _dao = getInsumoDao();
			Insumo _result[] = _dao.findWhereCriticoEquals(critico);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getInsumoDao'
	 * 
	 * @return InsumoDao
	 */
	public static InsumoDao getInsumoDao()
	{
		return InsumoDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(Insumo dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getIdInsumo() );
		buf.append( ", " );
		buf.append( dto.getNombre() );
		buf.append( ", " );
		buf.append( dto.getCategoria() );
		buf.append( ", " );
		buf.append( dto.getStockActual() );
		buf.append( ", " );
		buf.append( dto.getStockMinimo() );
		buf.append( ", " );
		buf.append( dto.getCritico() );
		System.out.println( buf.toString() );
	}

}
