/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.SIGIA.app.example;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import com.SIGIA.app.dao.ItemSolicitudDao;
import com.SIGIA.app.dto.ItemSolicitud;
import com.SIGIA.app.exceptions.ItemSolicitudDaoException;
import com.SIGIA.app.factory.ItemSolicitudDaoFactory;

public class ItemSolicitudDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		// findAll();
		// findBySolicitud(0);
		// findByInsumo(0);
		// findWhereIdItemEquals(0);
		// findWhereIdSolicitudEquals(0);
		// findWhereIdInsumoEquals(0);
		// findWhereCantSolicitadaEquals(0);
		// findWhereCantEntregadaEquals(0);
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			ItemSolicitudDao _dao = getItemSolicitudDao();
			ItemSolicitud _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findBySolicitud'
	 * 
	 * @param idSolicitud
	 */
	public static void findBySolicitud(int idSolicitud)
	{
		try {
			ItemSolicitudDao _dao = getItemSolicitudDao();
			ItemSolicitud _result[] = _dao.findBySolicitud(idSolicitud);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByInsumo'
	 * 
	 * @param idInsumo
	 */
	public static void findByInsumo(int idInsumo)
	{
		try {
			ItemSolicitudDao _dao = getItemSolicitudDao();
			ItemSolicitud _result[] = _dao.findByInsumo(idInsumo);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereIdItemEquals'
	 * 
	 * @param idItem
	 */
	public static void findWhereIdItemEquals(int idItem)
	{
		try {
			ItemSolicitudDao _dao = getItemSolicitudDao();
			ItemSolicitud _result[] = _dao.findWhereIdItemEquals(idItem);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereIdSolicitudEquals'
	 * 
	 * @param idSolicitud
	 */
	public static void findWhereIdSolicitudEquals(int idSolicitud)
	{
		try {
			ItemSolicitudDao _dao = getItemSolicitudDao();
			ItemSolicitud _result[] = _dao.findWhereIdSolicitudEquals(idSolicitud);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereIdInsumoEquals'
	 * 
	 * @param idInsumo
	 */
	public static void findWhereIdInsumoEquals(int idInsumo)
	{
		try {
			ItemSolicitudDao _dao = getItemSolicitudDao();
			ItemSolicitud _result[] = _dao.findWhereIdInsumoEquals(idInsumo);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCantSolicitadaEquals'
	 * 
	 * @param cantSolicitada
	 */
	public static void findWhereCantSolicitadaEquals(int cantSolicitada)
	{
		try {
			ItemSolicitudDao _dao = getItemSolicitudDao();
			ItemSolicitud _result[] = _dao.findWhereCantSolicitadaEquals(cantSolicitada);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCantEntregadaEquals'
	 * 
	 * @param cantEntregada
	 */
	public static void findWhereCantEntregadaEquals(int cantEntregada)
	{
		try {
			ItemSolicitudDao _dao = getItemSolicitudDao();
			ItemSolicitud _result[] = _dao.findWhereCantEntregadaEquals(cantEntregada);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getItemSolicitudDao'
	 * 
	 * @return ItemSolicitudDao
	 */
	public static ItemSolicitudDao getItemSolicitudDao()
	{
		return ItemSolicitudDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(ItemSolicitud dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getIdItem() );
		buf.append( ", " );
		buf.append( dto.getIdSolicitud() );
		buf.append( ", " );
		buf.append( dto.getIdInsumo() );
		buf.append( ", " );
		buf.append( dto.getCantSolicitada() );
		buf.append( ", " );
		buf.append( dto.getCantEntregada() );
		System.out.println( buf.toString() );
	}

}
