/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.SIGIA.app.example;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import com.SIGIA.app.dao.TransaccionDao;
import com.SIGIA.app.dto.Transaccion;
import com.SIGIA.app.exceptions.TransaccionDaoException;
import com.SIGIA.app.factory.TransaccionDaoFactory;

public class TransaccionDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		// findAll();
		// findByInsumo(0);
		// findByUsuario(0);
		// findWhereIdTransaccionEquals(0);
		// findWhereTipoEquals("");
		// findWhereFechaEquals(null);
		// findWhereCantidadEquals(0);
		// findWhereAreaDestinoEquals("");
		// findWhereSolicitanteEquals("");
		// findWhereIdInsumoEquals(0);
		// findWhereIdUsuarioEquals(0);
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			TransaccionDao _dao = getTransaccionDao();
			Transaccion _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByInsumo'
	 * 
	 * @param idInsumo
	 */
	public static void findByInsumo(int idInsumo)
	{
		try {
			TransaccionDao _dao = getTransaccionDao();
			Transaccion _result[] = _dao.findByInsumo(idInsumo);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByUsuario'
	 * 
	 * @param idUsuario
	 */
	public static void findByUsuario(int idUsuario)
	{
		try {
			TransaccionDao _dao = getTransaccionDao();
			Transaccion _result[] = _dao.findByUsuario(idUsuario);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereIdTransaccionEquals'
	 * 
	 * @param idTransaccion
	 */
	public static void findWhereIdTransaccionEquals(int idTransaccion)
	{
		try {
			TransaccionDao _dao = getTransaccionDao();
			Transaccion _result[] = _dao.findWhereIdTransaccionEquals(idTransaccion);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereTipoEquals'
	 * 
	 * @param tipo
	 */
	public static void findWhereTipoEquals(String tipo)
	{
		try {
			TransaccionDao _dao = getTransaccionDao();
			Transaccion _result[] = _dao.findWhereTipoEquals(tipo);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereFechaEquals'
	 * 
	 * @param fecha
	 */
	public static void findWhereFechaEquals(Date fecha)
	{
		try {
			TransaccionDao _dao = getTransaccionDao();
			Transaccion _result[] = _dao.findWhereFechaEquals(fecha);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCantidadEquals'
	 * 
	 * @param cantidad
	 */
	public static void findWhereCantidadEquals(int cantidad)
	{
		try {
			TransaccionDao _dao = getTransaccionDao();
			Transaccion _result[] = _dao.findWhereCantidadEquals(cantidad);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereAreaDestinoEquals'
	 * 
	 * @param areaDestino
	 */
	public static void findWhereAreaDestinoEquals(String areaDestino)
	{
		try {
			TransaccionDao _dao = getTransaccionDao();
			Transaccion _result[] = _dao.findWhereAreaDestinoEquals(areaDestino);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereSolicitanteEquals'
	 * 
	 * @param solicitante
	 */
	public static void findWhereSolicitanteEquals(String solicitante)
	{
		try {
			TransaccionDao _dao = getTransaccionDao();
			Transaccion _result[] = _dao.findWhereSolicitanteEquals(solicitante);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereIdInsumoEquals'
	 * 
	 * @param idInsumo
	 */
	public static void findWhereIdInsumoEquals(int idInsumo)
	{
		try {
			TransaccionDao _dao = getTransaccionDao();
			Transaccion _result[] = _dao.findWhereIdInsumoEquals(idInsumo);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereIdUsuarioEquals'
	 * 
	 * @param idUsuario
	 */
	public static void findWhereIdUsuarioEquals(int idUsuario)
	{
		try {
			TransaccionDao _dao = getTransaccionDao();
			Transaccion _result[] = _dao.findWhereIdUsuarioEquals(idUsuario);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getTransaccionDao'
	 * 
	 * @return TransaccionDao
	 */
	public static TransaccionDao getTransaccionDao()
	{
		return TransaccionDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(Transaccion dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getIdTransaccion() );
		buf.append( ", " );
		buf.append( dto.getTipo() );
		buf.append( ", " );
		buf.append( dto.getFecha() );
		buf.append( ", " );
		buf.append( dto.getCantidad() );
		buf.append( ", " );
		buf.append( dto.getAreaDestino() );
		buf.append( ", " );
		buf.append( dto.getSolicitante() );
		buf.append( ", " );
		buf.append( dto.getIdInsumo() );
		buf.append( ", " );
		buf.append( dto.getIdUsuario() );
		System.out.println( buf.toString() );
	}

}
