/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.SIGIA.app.dao;

import java.util.Date;
import com.SIGIA.app.dto.*;
import com.SIGIA.app.exceptions.*;

public interface ActividadDao
{
	/** 
	 * Inserts a new row in the Actividad table.
	 */
	public ActividadPk insert(Actividad dto) throws ActividadDaoException;

	/** 
	 * Updates a single row in the Actividad table.
	 */
	public void update(ActividadPk pk, Actividad dto) throws ActividadDaoException;

	/** 
	 * Deletes a single row in the Actividad table.
	 */
	public void delete(ActividadPk pk) throws ActividadDaoException;

	/** 
	 * Returns the rows from the Actividad table that matches the specified primary-key value.
	 */
	public Actividad findByPrimaryKey(ActividadPk pk) throws ActividadDaoException;

	/** 
	 * Returns all rows from the Actividad table that match the criteria 'idActividad = :idActividad'.
	 */
	public Actividad findByPrimaryKey(int idActividad) throws ActividadDaoException;

	/** 
	 * Returns all rows from the Actividad table that match the criteria ''.
	 */
	public Actividad[] findAll() throws ActividadDaoException;

	/** 
	 * Returns all rows from the Actividad table that match the criteria 'idUsuario = :idUsuario'.
	 */
	public Actividad[] findByUsuario(int idUsuario) throws ActividadDaoException;

	/** 
	 * Returns all rows from the Actividad table that match the criteria 'idActividad = :idActividad'.
	 */
	public Actividad[] findWhereIdActividadEquals(int idActividad) throws ActividadDaoException;

	/** 
	 * Returns all rows from the Actividad table that match the criteria 'areaAfectada = :areaAfectada'.
	 */
	public Actividad[] findWhereAreaAfectadaEquals(String areaAfectada) throws ActividadDaoException;

	/** 
	 * Returns all rows from the Actividad table that match the criteria 'accionRealizada = :accionRealizada'.
	 */
	public Actividad[] findWhereAccionRealizadaEquals(String accionRealizada) throws ActividadDaoException;

	/** 
	 * Returns all rows from the Actividad table that match the criteria 'fecha = :fecha'.
	 */
	public Actividad[] findWhereFechaEquals(Date fecha) throws ActividadDaoException;

	/** 
	 * Returns all rows from the Actividad table that match the criteria 'descripcion = :descripcion'.
	 */
	public Actividad[] findWhereDescripcionEquals(String descripcion) throws ActividadDaoException;

	/** 
	 * Returns all rows from the Actividad table that match the criteria 'idUsuario = :idUsuario'.
	 */
	public Actividad[] findWhereIdUsuarioEquals(int idUsuario) throws ActividadDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the Actividad table that match the specified arbitrary SQL statement
	 */
	public Actividad[] findByDynamicSelect(String sql, Object[] sqlParams) throws ActividadDaoException;

	/** 
	 * Returns all rows from the Actividad table that match the specified arbitrary SQL statement
	 */
	public Actividad[] findByDynamicWhere(String sql, Object[] sqlParams) throws ActividadDaoException;

}
