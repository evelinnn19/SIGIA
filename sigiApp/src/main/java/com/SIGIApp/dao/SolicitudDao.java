/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.SIGIApp.dao;

import com.SIGIApp.dto.Solicitud;
import com.SIGIApp.dto.SolicitudPk;
import com.SIGIApp.exceptions.SolicitudDaoException;
import java.util.Date;

public interface SolicitudDao
{
	/** 
	 * Inserts a new row in the Solicitud table.
	 */
	public SolicitudPk insert(Solicitud dto) throws SolicitudDaoException;

	/** 
	 * Updates a single row in the Solicitud table.
	 */
	public void update(SolicitudPk pk, Solicitud dto) throws SolicitudDaoException;

	/** 
	 * Deletes a single row in the Solicitud table.
	 */
	public void delete(SolicitudPk pk) throws SolicitudDaoException;

	/** 
	 * Returns the rows from the Solicitud table that matches the specified primary-key value.
	 */
	public Solicitud findByPrimaryKey(SolicitudPk pk) throws SolicitudDaoException;

	/** 
	 * Returns all rows from the Solicitud table that match the criteria 'idSolicitud = :idSolicitud'.
	 */
	public Solicitud findByPrimaryKey(int idSolicitud) throws SolicitudDaoException;

	/** 
	 * Returns all rows from the Solicitud table that match the criteria ''.
	 */
	public Solicitud[] findAll() throws SolicitudDaoException;

	/** 
	 * Returns all rows from the Solicitud table that match the criteria 'idSolicitud = :idSolicitud'.
	 */
	public Solicitud[] findWhereIdSolicitudEquals(int idSolicitud) throws SolicitudDaoException;

	/** 
	 * Returns all rows from the Solicitud table that match the criteria 'nroTramite = :nroTramite'.
	 */
	public Solicitud[] findWhereNroTramiteEquals(String nroTramite) throws SolicitudDaoException;

	/** 
	 * Returns all rows from the Solicitud table that match the criteria 'fecha = :fecha'.
	 */
	public Solicitud[] findWhereFechaEquals(Date fecha) throws SolicitudDaoException;

	/** 
	 * Returns all rows from the Solicitud table that match the criteria 'estado = :estado'.
	 */
	public Solicitud[] findWhereEstadoEquals(String estado) throws SolicitudDaoException;

	/** 
	 * Returns all rows from the Solicitud table that match the criteria 'area = :area'.
	 */
	public Solicitud[] findWhereAreaEquals(String area) throws SolicitudDaoException;

	/** 
	 * Returns all rows from the Solicitud table that match the criteria 'solicitante = :solicitante'.
	 */
	public Solicitud[] findWhereSolicitanteEquals(String solicitante) throws SolicitudDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the Solicitud table that match the specified arbitrary SQL statement
	 */
	public Solicitud[] findByDynamicSelect(String sql, Object[] sqlParams) throws SolicitudDaoException;

	/** 
	 * Returns all rows from the Solicitud table that match the specified arbitrary SQL statement
	 */
	public Solicitud[] findByDynamicWhere(String sql, Object[] sqlParams) throws SolicitudDaoException;

}
